const express = require('express')
const routes = express.Router()
const CourseController = require('../controllers/CourseController')
const MatterController = require('../controllers/MatterController')
const QuestionController = require('../controllers/QuestionController')
const AnswerController = require("../controllers/AnswerController")
const LoginController = require("../controllers/LoginController")
const multer = require('multer')
const upload = multer();
const passport = require('passport')

require('../config/passport')

routes.get('/login/', LoginController.renderFormLogin)
routes.post('/login', LoginController.loginUser)
routes.get('/register', LoginController.renderFormRegister)
routes.post('/register', LoginController.registerUser)
routes.get('/courses-admin', passport.authenticate('jwt', {session: false, failureRedirect:'/login'}), CourseController.renderScreenCoursesAdmin)
routes.get('/courses-admin/delete/:id', passport.authenticate('jwt', {session: false, failureRedirect:'/login'}), CourseController.deleteCourse)
routes.get('/matters-admin', passport.authenticate('jwt', {session: false, failureRedirect:'/login'}), MatterController.renderScreenMattersAdmin)
routes.get('/matters-admin/delete/:id', passport.authenticate('jwt', {session: false, failureRedirect:'/login'}), MatterController.deleteMatter)
routes.get('/myquestions', passport.authenticate('jwt', {session: false, failureRedirect:'/login'}), QuestionController.renderScreenQuestionsByUser)
routes.get('/myquestions/delete/:id', passport.authenticate('jwt', {session: false, failureRedirect:'/login'}), QuestionController.deleteQuestion)
routes.get('/matters/:idMatter/question/:idQuestion/answer/delete/:id', passport.authenticate('jwt', {session: false, failureRedirect:'/login'}), AnswerController.deleteAnswer)
//Edit
routes.get('/courses-admin/edit/:id', passport.authenticate('jwt', {session: false, failureRedirect:'/login'}), CourseController.renderScreenEditCourseAdmin)
routes.post('/courses-admin/edit/:id', passport.authenticate('jwt', {session: false, failureRedirect:'/login'}), CourseController.editCourse)
routes.get('/matters-admin/edit/:id', passport.authenticate('jwt', {session: false, failureRedirect:'/login'}), MatterController.renderScreenEditMatterAdmin)
routes.post('/matters-admin/edit/:id', passport.authenticate('jwt', {session: false, failureRedirect:'/login'}), MatterController.editMatter)
routes.get('/myquestions/edit/:id', passport.authenticate('jwt', {session: false, failureRedirect:'/login'}), QuestionController.renderScreenEditQuestions)
routes.post('/myquestions/edit/:id', passport.authenticate('jwt', {session: false, failureRedirect:'/login'}), QuestionController.editQuestion)
routes.get('/matters/:idMatter/question/:idQuestion/answer/edit/:id', passport.authenticate('jwt', {session: false, failureRedirect:'/login'}), AnswerController.renderFormEditAnswer)
routes.post('/matters/:idMatter/question/:idQuestion/answer/edit/:id', passport.authenticate('jwt', {session: false, failureRedirect:'/login'}), AnswerController.editAnswer)
routes.get('/courses-admin/new', passport.authenticate('jwt', {session: false, failureRedirect:'/login'}), CourseController.renderFormNewCourse)
routes.post('/courses-admin/new', passport.authenticate('jwt', {session: false, failureRedirect:'/login'}), CourseController.createCourse)
routes.get('/matters-admin/new', passport.authenticate('jwt', {session: false, failureRedirect:'/login'}), MatterController.renderFormNewMatter)
routes.post('/matters-admin/new', passport.authenticate('jwt', {session: false, failureRedirect:'/login'}), MatterController.newMatter)

routes.get('/logout', passport.authenticate('jwt', {session: false, failureRedirect:'/login'}), LoginController.logoutUser)
routes.get('/courses', passport.authenticate('jwt', {session: false, failureRedirect:'/login'}), CourseController.renderScreenCourses)
routes.get('/courses/:idCourse/matters', passport.authenticate('jwt', {session: false, failureRedirect:'/login'}), MatterController.renderScreenMatters)
routes.get('/matters/:idMatter/questions', passport.authenticate('jwt', {session: false, failureRedirect:'/login'}), QuestionController.renderScreenQuestions)
routes.get('/matters/:idMatter/questions/search/', passport.authenticate('jwt', {session: false, failureRedirect:'/login'}), QuestionController.selectQuestions)
routes.get('/matters/:idMatter/questions/new', passport.authenticate('jwt', {session: false, failureRedirect:'/login'}), QuestionController.renderFormQuestion)
routes.post('/matters/:idMatter/questions/new', passport.authenticate('jwt', {session: false, failureRedirect:'/login'}), upload.array('image', 2), QuestionController.createQuestion)
routes.get('/matters/:idMatter/questions/:idQuestion', passport.authenticate('jwt', {session: false, failureRedirect:'/login'}), QuestionController.renderQuestionsAndAnswers)
routes.get('/matters/:idMatter/questions/:id/answer/new', passport.authenticate('jwt', {session: false, failureRedirect:'/login'}), AnswerController.renderFormAnswer)
routes.post('/matters/:idMatter/questions/:id/answer/new', passport.authenticate('jwt', {session: false, failureRedirect:'/login'}),upload.array('image', 2), AnswerController.createAnswer)
module.exports = routes